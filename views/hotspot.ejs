<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hotspot - Flavor Fiesta</title>
    <link rel="stylesheet" href="/home.css">
    <link rel="stylesheet" href="/cards.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
</head>
<body>
    <header>
        <nav>
            <a href="/home" style="text-decoration: none;"><div class="logo">Bennett Foods</div></a>
            <ul>
                <li><a href="/home">Home</a></li>
                <li><a href="/hotspot-cart" class="cart-link">Hotspot Cart <span class="cart-count">0</span></a></li>
            </ul>
        </nav>
    </header>

    <main>
        <section class="menu">
            <h2>Hotspot Menu</h2>
            <div class="food-grid">
                <% food.forEach(item => { %>
                    <div class="food-card">
                        <img src="<%= item.image.url %>" alt="<%= item.name %>">
                        <div class="food-info">
                            <h3><%= item.name %></h3>
                            <p><%= item.description %></p>
                            <div class="price-quantity">
                                <span class="price">₹<%= (item.price).toFixed(2) %></span>
                                <div class="quantity-control">
                                    <button class="quantity-btn minus" data-id="<%= item._id %>">
                                        -
                                    </button>
                                    <span class="quantity" data-id="<%= item._id %>">0</span>
                                    <button class="quantity-btn plus" data-id="<%= item._id %>">
                                        +
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                <% }) %>
            </div>
        </section>
    </main>

    <footer>
        <p>&copy; 2024 Flavor Fiesta. All rights reserved.</p>
    </footer>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const shopName = 'hotspot';
            let cart = {};

            async function fetchCart() {
                try {
                    const response = await fetch('/api/get-cart');
                    if (!response.ok) {
                        throw new Error('Failed to fetch cart');
                    }
                    const data = await response.json();
                    cart = {};  // Reset cart before updating
                    if (data.cart && data.cart.hotspotCartItems) {
                        data.cart.hotspotCartItems.forEach(item => {
                            cart[item.itemId] = item;
                            updateQuantityDisplay(item.itemId);
                        });
                    }
                    updateCartCount();
                } catch (error) {
                    console.error('Error fetching cart:', error);
                }
            }

            function updateQuantityDisplay(itemId) {
                const quantityElement = document.querySelector(`.quantity[data-id="${itemId}"]`);
                if (quantityElement) {
                    quantityElement.textContent = cart[itemId] ? cart[itemId].quantity : '0';
                }
            }

            function updateCartCount() {
                const cartCount = Object.values(cart).reduce((total, item) => total + (item.quantity || 0), 0);
                const cartCountElement = document.querySelector('.cart-count');
                if (cartCountElement) {
                    cartCountElement.textContent = cartCount;
                }
            }

            async function updateCart(itemId, change) {
                try {
                    const itemElement = document.querySelector(`.food-card img[src="${cart[itemId]?.image || document.querySelector(`.quantity-btn[data-id="${itemId}"]`).closest('.food-card').querySelector('img').src}"]`).closest('.food-card');
                    
                    const newQuantity = (cart[itemId]?.quantity || 0) + change;
                    
                    if (newQuantity <= 0) {
                        delete cart[itemId];
                    } else {
                        if (!cart[itemId]) {
                            cart[itemId] = {
                                itemId: itemId,
                                itemName: itemElement.querySelector('h3').textContent,
                                price: parseFloat(itemElement.querySelector('.price').textContent.replace('₹', '')),
                                image: itemElement.querySelector('img').src,
                                quantity: 0
                            };
                        }
                        cart[itemId].quantity = newQuantity;
                    }

                    const response = await fetch('/api/update-cart', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            shopName: shopName,
                            itemId: itemId,
                            itemName: cart[itemId]?.itemName || itemElement.querySelector('h3').textContent,
                            quantity: newQuantity,
                            price: cart[itemId]?.price || parseFloat(itemElement.querySelector('.price').textContent.replace('₹', '')),
                            image: cart[itemId]?.image || itemElement.querySelector('img').src
                        }),
                    });

                    if (!response.ok) {
                        throw new Error('Failed to update cart on server');
                    }

                    const result = await response.json();
                    console.log('Cart updated on server:', result);

                    updateQuantityDisplay(itemId);
                    updateCartCount();
                } catch (error) {
                    console.error('Error updating cart:', error);
                    // Instead of showing an alert, update the UI to show the error
                    const itemElement = document.querySelector(`.quantity-btn[data-id="${itemId}"]`).closest('.food-card');
                    const errorDiv = document.createElement('div');
                    errorDiv.className = 'error-message';
                    errorDiv.textContent = 'Failed to update cart. Please try again.';
                    errorDiv.style.color = 'red';
                    errorDiv.style.fontSize = '0.8rem';
                    errorDiv.style.marginTop = '0.5rem';
                    
                    // Remove any existing error message
                    const existingError = itemElement.querySelector('.error-message');
                    if (existingError) {
                        existingError.remove();
                    }
                    
                    itemElement.querySelector('.food-info').appendChild(errorDiv);
                    
                    // Remove the error message after 3 seconds
                    setTimeout(() => {
                        errorDiv.remove();
                    }, 3000);
                }
            }

            // Add click event listeners to all quantity buttons
            document.querySelectorAll('.quantity-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const itemId = this.dataset.id;
                    const change = this.classList.contains('plus') ? 1 : -1;
                    updateCart(itemId, change);
                });
            });

            // Fetch the cart when the page loads
            fetchCart();
        });
    </script>
</body>
</html>